/*
Constants
*/
/*
Hides text in the margin
*/
/*
Turns a button into an icon
*/
/*
Centres a graphic or glyph inside an icon
*/
/*
Offers both the pixel and rem value of a single property
*/
/*
Offers both the pixel and rem values of a shorthand property
*/
/*
Offers the text size as both the pixel and rem value
*/
/*
Adds vendor prefixed to a property
*/
/*
Applies the "clearfix" hack to a container with floating content
*/
/*
	Photo Zoom
*/
@media all {
  /*
		example container style
	*/
  #photozoom {
    margin: 0;
    padding: 0;
    position: relative; }
    #photozoom * {
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -ms-interpolation-mode: bicubic; }
    #photozoom li {
      display: inline;
      margin: 0;
      padding: 0; }
      #photozoom li img {
        margin: 0 0 0.33rem 0;
        display: inline-block;
        height: 96px;
        width: auto;
        vertical-align: top; }
  /*
		component styles
	*/
  .photozoom-popup {
    -webkit-transition: opacity ease 500ms;
    transition: opacity ease 500ms;
    background: rgba(0, 0, 0, 0.9);
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    margin: 0;
    padding: 0;
    overflow: hidden;
    position: absolute;
    text-align: center;
    z-index: 20000; }
    .photozoom-popup.photozoom-busy-fixed {
      position: fixed; }
    .photozoom-popup * {
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -ms-interpolation-mode: bicubic; }
    .photozoom-popup .photozoom-caption {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      padding: 1em;
      background-color: rgba(0, 0, 0, 0.7);
      color: #fff;
      text-align: left;
      z-index: 2; }
      .photozoom-popup .photozoom-caption-hidden {
        display: none; }
    .photozoom-popup .photozoom-image {
      -webkit-transition: left ease 500ms;
      transition: left ease 500ms;
      position: relative;
      left: 0;
      z-index: 1; }
    .photozoom-popup .photozoom-closer,
    .photozoom-popup .photozoom-locator {
      overflow: hidden;
      position: relative;
      text-align: left;
      text-indent: 58px;
      white-space: nowrap;
      /* Because of Internet Explorer 8 we can't have nice thing. */
      overflow: visible;
      text-indent: -999em;
      width: 3rem;
      height: 3rem;
      right: 1rem;
      top: 1rem;
      background: #000086;
      color: #fff;
      cursor: pointer;
      font-weight: bold;
      position: absolute;
      text-align: center;
      text-decoration: none;
      z-index: 2; }
      .photozoom-popup .photozoom-closer:before,
      .photozoom-popup .photozoom-locator:before {
        content: "";
        display: block;
        font-family: FontAwesome;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        margin-left: -12px;
        margin-top: -12px;
        width: 24px;
        position: absolute;
        left: 50%;
        text-align: center;
        top: 50%;
        background-image: url("../img/close.svg");
        background-size: 24px 24px; }
      .photozoom-popup .photozoom-closer:hover,
      .photozoom-popup .photozoom-locator:hover {
        background: #ff9800; }
    .photozoom-popup .photozoom-locator {
      right: 5rem;
      display: none; }
      .photozoom-popup .photozoom-locator:before {
        background-image: url("../img/map_2.svg"); }
  .photozoom-popup-passive {
    opacity: 0; }
  .photozoom-popup-active {
    opacity: 1; }
  /*
		busy spinner
	*/
  .photozoom-busy {
    border-radius: 5px;
    opacity: 0.8;
    background: #000 url("../img/busy.gif") no-repeat 50% 50%;
    height: 48px;
    left: 50%;
    margin: -24px;
    position: absolute;
    top: 50%;
    width: 48px;
    z-index: 20001; }
    .photozoom-busy.photozoom-busy-fixed {
      position: fixed; }
  .photozoom-busy-passive {
    visibility: hidden; }
  .photozoom-busy-active {
    visibility: visible; } }

@media (orientation: portrait) {
  .photozoom-popup .photozoom-locator {
    display: block; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
